//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/gson/build/mainTranslationExtraction/com/google/gson/internal/bind/DateTypeAdapter.java
//

#include "DateTypeAdapter.h"
#include "Gson.h"
#include "IOSClass.h"
#include "ISO8601Utils.h"
#include "J2ObjC_source.h"
#include "JsonReader.h"
#include "JsonSyntaxException.h"
#include "JsonToken.h"
#include "JsonWriter.h"
#include "TypeAdapter.h"
#include "TypeAdapterFactory.h"
#include "TypeToken.h"
#include "java/text/DateFormat.h"
#include "java/text/ParseException.h"
#include "java/text/ParsePosition.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleGsonInternalBindDateTypeAdapter () {
 @public
  JavaTextDateFormat *enUsFormat_;
  JavaTextDateFormat *localFormat_;
}

- (JavaUtilDate *)deserializeToDateWithNSString:(NSString *)json;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindDateTypeAdapter, enUsFormat_, JavaTextDateFormat *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindDateTypeAdapter, localFormat_, JavaTextDateFormat *)

__attribute__((unused)) static JavaUtilDate *ComGoogleGsonInternalBindDateTypeAdapter_deserializeToDateWithNSString_(ComGoogleGsonInternalBindDateTypeAdapter *self, NSString *json);

@interface ComGoogleGsonInternalBindDateTypeAdapter_$1 : NSObject < ComGoogleGsonTypeAdapterFactory >

- (ComGoogleGsonTypeAdapter *)createWithComGoogleGsonGson:(ComGoogleGsonGson *)gson
                        withComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)typeToken;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalBindDateTypeAdapter_$1)

__attribute__((unused)) static void ComGoogleGsonInternalBindDateTypeAdapter_$1_init(ComGoogleGsonInternalBindDateTypeAdapter_$1 *self);

__attribute__((unused)) static ComGoogleGsonInternalBindDateTypeAdapter_$1 *new_ComGoogleGsonInternalBindDateTypeAdapter_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalBindDateTypeAdapter_$1 *create_ComGoogleGsonInternalBindDateTypeAdapter_$1_init();

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonInternalBindDateTypeAdapter)

id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonInternalBindDateTypeAdapter_FACTORY;

@implementation ComGoogleGsonInternalBindDateTypeAdapter

- (JavaUtilDate *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  if ([((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(ComGoogleGsonStreamJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return ComGoogleGsonInternalBindDateTypeAdapter_deserializeToDateWithNSString_(self, [inArg nextString]);
}

- (JavaUtilDate *)deserializeToDateWithNSString:(NSString *)json {
  return ComGoogleGsonInternalBindDateTypeAdapter_deserializeToDateWithNSString_(self, json);
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(JavaUtilDate *)value {
  @synchronized(self) {
    if (value == nil) {
      (void) [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) nullValue];
      return;
    }
    NSString *dateFormatAsString = [((JavaTextDateFormat *) nil_chk(enUsFormat_)) formatWithJavaUtilDate:value];
    (void) [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithNSString:dateFormatAsString];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindDateTypeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilDate;", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x22, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 6, 7, 2, 8, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[1].selector = @selector(deserializeToDateWithNSString:);
  methods[2].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FACTORY", "LComGoogleGsonTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "enUsFormat_", "LJavaTextDateFormat;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "localFormat_", "LJavaTextDateFormat;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)Ljava/util/Date;", "deserializeToDate", "LNSString;", "write", "LComGoogleGsonStreamJsonWriter;LJavaUtilDate;", "(Lcom/google/gson/stream/JsonWriter;Ljava/util/Date;)V", &ComGoogleGsonInternalBindDateTypeAdapter_FACTORY, "Lcom/google/gson/TypeAdapter<Ljava/util/Date;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindDateTypeAdapter = { "DateTypeAdapter", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, -1, -1, 10, -1 };
  return &_ComGoogleGsonInternalBindDateTypeAdapter;
}

+ (void)initialize {
  if (self == [ComGoogleGsonInternalBindDateTypeAdapter class]) {
    ComGoogleGsonInternalBindDateTypeAdapter_FACTORY = new_ComGoogleGsonInternalBindDateTypeAdapter_$1_init();
    J2OBJC_SET_INITIALIZED(ComGoogleGsonInternalBindDateTypeAdapter)
  }
}

@end

JavaUtilDate *ComGoogleGsonInternalBindDateTypeAdapter_deserializeToDateWithNSString_(ComGoogleGsonInternalBindDateTypeAdapter *self, NSString *json) {
  @synchronized(self) {
    @try {
      return [((JavaTextDateFormat *) nil_chk(self->localFormat_)) parseWithNSString:json];
    }
    @catch (JavaTextParseException *ignored) {
    }
    @try {
      return [((JavaTextDateFormat *) nil_chk(self->enUsFormat_)) parseWithNSString:json];
    }
    @catch (JavaTextParseException *ignored) {
    }
    @try {
      return ComGoogleGsonInternalBindUtilISO8601Utils_parseWithNSString_withJavaTextParsePosition_(json, new_JavaTextParsePosition_initWithInt_(0));
    }
    @catch (JavaTextParseException *e) {
      @throw new_ComGoogleGsonJsonSyntaxException_initWithNSString_withNSException_(json, e);
    }
  }
}

void ComGoogleGsonInternalBindDateTypeAdapter_init(ComGoogleGsonInternalBindDateTypeAdapter *self) {
  ComGoogleGsonTypeAdapter_init(self);
  self->enUsFormat_ = JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_withJavaUtilLocale_(JavaTextDateFormat_DEFAULT, JavaTextDateFormat_DEFAULT, JreLoadStatic(JavaUtilLocale, US));
  self->localFormat_ = JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(JavaTextDateFormat_DEFAULT, JavaTextDateFormat_DEFAULT);
}

ComGoogleGsonInternalBindDateTypeAdapter *new_ComGoogleGsonInternalBindDateTypeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalBindDateTypeAdapter, init)
}

ComGoogleGsonInternalBindDateTypeAdapter *create_ComGoogleGsonInternalBindDateTypeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalBindDateTypeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalBindDateTypeAdapter)

@implementation ComGoogleGsonInternalBindDateTypeAdapter_$1

- (ComGoogleGsonTypeAdapter *)createWithComGoogleGsonGson:(ComGoogleGsonGson *)gson
                        withComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)typeToken {
  return [((ComGoogleGsonReflectTypeToken *) nil_chk(typeToken)) getRawType] == (id) JavaUtilDate_class_() ? new_ComGoogleGsonInternalBindDateTypeAdapter_init() : nil;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindDateTypeAdapter_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleGsonTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithComGoogleGsonGson:withComGoogleGsonReflectTypeToken:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LComGoogleGsonGson;LComGoogleGsonReflectTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LComGoogleGsonInternalBindDateTypeAdapter;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindDateTypeAdapter_$1 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalBindDateTypeAdapter_$1;
}

@end

void ComGoogleGsonInternalBindDateTypeAdapter_$1_init(ComGoogleGsonInternalBindDateTypeAdapter_$1 *self) {
  NSObject_init(self);
}

ComGoogleGsonInternalBindDateTypeAdapter_$1 *new_ComGoogleGsonInternalBindDateTypeAdapter_$1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalBindDateTypeAdapter_$1, init)
}

ComGoogleGsonInternalBindDateTypeAdapter_$1 *create_ComGoogleGsonInternalBindDateTypeAdapter_$1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalBindDateTypeAdapter_$1, init)
}
